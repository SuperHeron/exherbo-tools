# Copyright (c) 2009 Pierre Lejeune <superheron@gmail.com>
# Distributed under the terms of the GNU General Public License v2

export_exlib_phases src_prepare src_install

myexparam hook_name=auto

DEPENDENCIES="
    build+run:
        sys-apps/paludis
"
PALUDIS_HOOK_SUFFIX=""

DEFAULT_SRC_COMPILE_PARAMS=( "PALUDIS_HOOK_SONAME=${PN}" )

paludis_version() {
    illegal_in_global_scope

    [[ "${EXHERES_PHASE}" == 'prepare' ]] || die "${FUNCNAME} can only be called during 'src_prepare' phase"

    local paludis_version= git_describe= version_hundred=0

    if has_version 'sys-apps/paludis[~scm]'; then
        cd "${FETCHEDDIR}"/scm/paludis
        git_describe=`git describe HEAD`
        if [[ "${git_describe}" =~ ^([0-9]+)\.([0-9]+)\.[0-9]+-[0-9]+-([0-9a-z]+)$ ]]; then
            version_hundred=`expr ${BASH_REMATCH[1]} \* 100 + ${BASH_REMATCH[2]}`
            PALUDIS_HOOK_SUFFIX=${BASH_REMATCH[1]}.${BASH_REMATCH[2]}_${BASH_REMATCH[3]}.so.${version_hundred}
        elif [[ "${git_describe}" =~ ^([0-9]+)\.([0-9]+)\.[0-9]+$ ]]; then
            version_hundred=`expr ${BASH_REMATCH[1]} \* 100 + ${BASH_REMATCH[2]}`
            PALUDIS_HOOK_SUFFIX="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.so.${version_hundred}"
        fi
    else
        paludis_version=`paludis --version | head -n1`
        if [[ "${paludis_version}" =~ ^paludis\ ([0-9]+)\.([0-9]+)\.[0-9]+ ]]; then
            version_hundred=`expr ${BASH_REMATCH[1]} \* 100 + ${BASH_REMATCH[2]}`
            PALUDIS_HOOK_SUFFIX="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.so.${version_hundred}"
        fi
    fi
}

paludis-so-hooks_src_prepare() {
    einfo "Determining paludis version suffix for hooks"
    paludis_version
    einfo ${PALUDIS_HOOK_SUFFIX}
}

paludis-so-hooks_src_install() {
    exparam -v paludis_hook_name hook_name
    emake -j1 DESTDIR="${IMAGE}" PALUDIS_HOOK_SUFFIX="${PALUDIS_HOOK_SUFFIX}" PALUDIS_HOOK_NAME="${paludis_hook_name}" PALUDIS_HOOK_SONAME="${PN}" install
}
